@using BlazorSensorDashboard.Shared
@using Microsoft.AspNetCore.SignalR.Client
@using System.Reactive.Disposables;
@inject HubStreamSubscriptionService HubStreamSubscription
@inject ConfigurationService ConfigurationService
@implements IDisposable

<div class="card-footer">
    <p>Min:@(MinValue?.ToString("0.00") ?? "-")@Units Max:@(MaxValue?.ToString("0.00") ?? "-")@Units</p>
</div>

@code {

    [Parameter]
    public DashboardConfigItem dashboardConfigItem { get; set; }

    double? MinValue { get; set; } = null;
    double? MaxValue { get; set; } = null;
    string Units { get; set; } = "-";

    IDisposable subscriptions;


    protected override Task OnInitializedAsync()
    {
        SubscribeStream();
        return Task.CompletedTask;
    }

    private void SubscribeStream()
    {
        var sensorReadingSubscription = HubStreamSubscription.SubscribeStream("StartListening", dashboardConfigItem.SensorName)
        .Subscribe(item =>
        {
            bool changed = false;
            if (MinValue == null)
            {
                MinValue = item.Value;
                changed = true;
            }
            if (MaxValue == null)
            {
                MaxValue = item.Value;
                changed = true;
            }
            if (item.Value < MinValue)
            {
                MinValue = item.Value;
                changed = true;
            }
            if (item.Value > MaxValue)
            {
                MaxValue = item.Value;
                changed = true;
            }
            if (changed)
            {
                StateHasChanged();
            }
        });

        var configurationSubcription = ConfigurationService.GetConfig()
            .Subscribe(config =>
            {
                var foundItem = config.FirstOrDefault(x => x.Name == dashboardConfigItem.SensorName);
                if (foundItem != null)
                {
                    Units = foundItem.SensorUnits;
                    StateHasChanged();
                }
            });

        subscriptions = new CompositeDisposable(sensorReadingSubscription, configurationSubcription);
    }

    public void Dispose()
    {
        subscriptions?.Dispose();
    }
}
